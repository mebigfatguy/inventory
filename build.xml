<project name="inventory" default="complete" basedir=".">
	<property file="user.properties" />
    <property file="build.properties" />
    <property file="version.properties" />
	
	<property name="src.dir" value="${basedir}/src/main/java" />
	<property name="reference.dir" value="${basedir}/src/reference/java" />
	<property name="test.dir" value="${basedir}/src/test/java" />
	<property name="reports.dir" value="${basedir}/reports" />
	<property name="reference-resources.dir" value="${basedir}/src/reference/resources" />
	<property name="ear-resources.dir" value="${basedir}/src/ear/resources" />
	<property name="target.dir" value="${basedir}/target"/>
	<property name="classes.dir" value="${target.dir}/classes" />
	<property name="reference-classes.dir" value="${target.dir}/reference-classes" />
	<property name="test-classes.dir" value="${target.dir}/test-classes" />
	<property name="war.dir" value="${target.dir}/war" />
	<property name="ear.dir" value="${target.dir}/ear" />
    <property name="lib.dir" value="${basedir}/lib" />
	<property name="javac.source" value="1.8" />
	<property name="javac.target" value="1.8" />
	<property name="javac.deprecation" value="on" />
	<property name="javac.debug" value="on" />
	<property name="proxy.server" value="" />
	<property name="inventory.version" value="0.1.0" />
	
	<path id="inventory.classpath">
        <pathelement location="${classes.dir}"/>
		<pathelement location="${lib.dir}/ant-${ant_.version}.jar"/>
		<pathelement location="${lib.dir}/asm-${asm.version}.jar"/>
		<pathelement location="${lib.dir}/commons-lang3-${commons-lang3.version}.jar"/>
 	</path>
 
	<path id="inventory.reference.classpath">
        <pathelement location="${lib.dir}/javax.servlet-api-${javax.servlet-api.version}.jar"/>
	</path>
	
	<path id="inventory.test.classpath">
        <pathelement location="${test-classes.dir}"/>
		<pathelement location="${lib.dir}/junit-jupiter-api-${junit-jupiter-api.version}.jar"/>
		<pathelement location="${lib.dir}/junit-jupiter-engine-${junit-jupiter-engine.version}.jar"/>
		<pathelement location="${lib.dir}/junit-platform-commons-${junit-platform-commons.version}.jar"/>
		<pathelement location="${lib.dir}/junit-platform-launcher-${junit-platform-launcher.version}.jar"/>
		<pathelement location="${lib.dir}/junit-platform-engine-${junit-platform-engine.version}.jar"/>
		<pathelement location="${lib.dir}/opentest4j-${opentest4j.version}.jar"/>
 	</path>
        	
    <target name="info">
        <echo message="inventory - a tool to find why or why not jars are included in an ear/war"/>
        <echo message=""/>
        <echo message="    this project uses yank (https://github.com/mebigfatguy/yank) for dependency management"/>
        <echo message="    download yank.jar and place in ant/lib directory"/>
        <echo message="    http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.mebigfatguy.yank%22"/>
    </target>

	<target name="yank" unless="no.yank" xmlns:yank="antlib:com.mebigfatguy.yank">
		<mkdir dir="${lib.dir}"/>
		<yank:yank yankFile="${basedir}/yank.xls" destination="${lib.dir}" proxyServer="${proxy.server}" source="true" separateClassifierTypes="true">
			<server url="https://repo1.maven.org/maven2"/>
			<generateVersions propertyFileName="${basedir}/version.properties" />
		</yank:yank>
	</target>
	
	<target name="init" depends="yank">
		<mkdir dir="${classes.dir}"/>
		<mkdir dir="${reference-classes.dir}"/>
		<mkdir dir="${test-classes.dir}"/>
		<mkdir dir="${war.dir}" />
		<mkdir dir="${ear.dir}" />
	</target>
		
	<target name="clean">
		<delete dir="${target.dir}"/>
	</target>
		
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" source="${javac.source}" target="${javac.target}" deprecation="${javac.deprecation}" debug="${javac.debug}" includeantruntime="false">
			<classpath refid="inventory.classpath" />
		</javac>
	</target>
	
	<target name="compile-reference" depends="init">
		<javac srcdir="${reference.dir}" destdir="${reference-classes.dir}" source="${javac.source}" target="${javac.target}" deprecation="${javac.deprecation}" debug="${javac.debug}" includeantruntime="false">
			<classpath refid="inventory.reference.classpath" />
		</javac>
	</target>
	
	<target name="compile-test" depends="init, compile">
		<javac srcdir="${test.dir}" destdir="${test-classes.dir}" source="${javac.source}" target="${javac.target}" deprecation="${javac.deprecation}" debug="${javac.debug}" includeantruntime="false">
			<classpath refid="inventory.classpath" />
			<classpath refid="inventory.test.classpath" />
		</javac>
	</target>
	
	<target name="reference-war" depends="init,compile-reference">
		<mkdir dir="${war.dir}/WEB-INF"/>
		<mkdir dir="${war.dir}/WEB-INF/classes"/>
		<copy todir="${war.dir}/WEB-INF/classes" includeEmptyDirs="true">
			<fileset dir="${reference-classes.dir}">
				<include name="**/*.class" />
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF">
			<fileset dir="${reference-resources.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		
		<jar destfile="${target.dir}/sample.war">
			<fileset dir="${war.dir}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>
	
	<target name="reference-ear" depends="reference-war" description="builds the reference ear">
		<mkdir dir="${ear.dir}/APP-INF" />
		<mkdir dir="${ear.dir}/APP-INF/lib" />
		<mkdir dir="${ear.dir}/WEB-INF" />
		<copy file="${target.dir}/sample.war" todir="${ear.dir}" />
		
		<copy file="${ear-resources.dir}/application.xml" todir="${ear.dir}/WEB-INF" />
		
		<jar destfile="${target.dir}/sample.ear">
			<fileset dir="${ear.dir}">
				<include name="**/*" />
			</fileset>
		</jar>
		
	</target>
		
	<target name="jar" depends="init,compile,compile-reference, compile-test, reference-ear" description="builds the jar file">
		<jar destfile="${target.dir}/inventory-${inventory.version}.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
			</fileset>
			<manifest>
				<attribute name="inventory-version" value="${inventory.version}" />
				<attribute name="Application-Name" value="inventory" />
				<attribute name="Permissions" value="all-permissions" />
				<attribute name="Codebase" value="*" />
				<attribute name="Bundle-ManifestVersion" value="2" />
				<attribute name="Bundle-Name" value="inventory" />
				<attribute name="Bundle-SymbolicName" value="inventory; singleton:=true" />
				<attribute name="Bundle-Version" value="${inventory.version}" />
				<attribute name="Bundle-ClassPath" value="." />
				<attribute name="Bundle-Vendor" value="Inventory Project" />
				<attribute name="Bundle-ActivationPolicy" value="lazy" />
				<attribute name="Export-Package" value="com.mebigfatguy.inventory" />
				<attribute name="Import-Package" value="org.slf4j" />
			</manifest>
		</jar>
	</target>
	
	<target name="test" depends="jar, reference-ear">
		<mkdir dir="${reports.dir}"/>
		<junitlauncher printsummary="yes">
			<classpath refid="inventory.test.classpath"/>
			<classpath refid="inventory.classpath"/>
			<classpath refid="inventory.reference.classpath"/>
			
			<testclasses outputdir="${reports.dir}">
				<fileset dir="${test-classes.dir}" includes="**/*Test.class"/>
                <listener type="legacy-xml" sendSysErr="true" sendSysOut="true"/>
	            <fork dir="${basedir}" includeJUnitPlatformLibraries="false">
	                <jvmarg value="-Djava.awt.headless=true" />
	            </fork>
			</testclasses>
		</junitlauncher>
	</target>
	
	<target name="complete" depends="jar, test"/>

</project>
